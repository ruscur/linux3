Test the nx-gzip function:
=========================

Verify that following device exists:
  /dev/crypto/nx-gzip
If you get a permission error run as sudo or set the device permissions:
   sudo chmod go+rw /dev/crypto/nx-gzip
However, chmod may not survive across boots. You may create a udev file such
as:
   /etc/udev/rules.d/99-nx-gzip.rules


Then make and run:
$ make
gcc -O3 -I./inc -o gzfht_test gzfht_test.c gzip_vas.c
gcc -O3 -I./inc -o gunz_test gunz_test.c gzip_vas.c


Compress any file using Fixed Huffman mode. Output will have a .nx.gz suffix:
$ ./gzfht_test gzip_vas.c
file gzip_vas.c read, 6418 bytes
compressed 6418 to 3131 bytes total, crc32 checksum = 96b9717d


Uncompress the previous output. Output will have a .nx.gunzip suffix:
./gunz_test gzip_vas.c.nx.gz
gzHeader FLG 0
00 00 00 00 04 03
gzHeader MTIME, XFL, OS ignored
computed checksum 96b9717d isize 00001912
stored   checksum 96b9717d isize 00001912
decomp is complete: fclose


Compare two files:
$ sha1sum gzip_vas.c.nx.gz.nx.gunzip gzip_vas.c
4c0b494f657c0c89a7d9f87dd3da8597be9a887a  gzip_vas.c.nx.gz.nx.gunzip
4c0b494f657c0c89a7d9f87dd3da8597be9a887a  gzip_vas.c


Note that the code here are intended for testing the nx-gzip hardware function.
They are not intended for demonstrating performance or compression ratio.
By being simplistic these selftests expect to allocate the entire set of source
and target pages in the memory so it needs enough memory to work.
For more information and source code consider using:
https://github.com/libnxz/power-gzip
